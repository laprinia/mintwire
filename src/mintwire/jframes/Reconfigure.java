/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mintwire.jframes;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import mintwire.p2pmodels.MintNode;
import mintwire.utils.Utils;
import org.jdesktop.swingx.util.OS;

public class Reconfigure extends javax.swing.JFrame {
    @Override
    public void setDefaultCloseOperation(int operation) {
        super.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); 
    }
    
    private final boolean isLinux=OS.isLinux();
    private static Reconfigure instance=null;
    private JLabel label;
    private boolean isAuthorized = false;
    private boolean isTryingFirst = false;
    private String appData = System.getenv("APPDATA");
    public static Reconfigure getInstance()
    {   
        if (instance==null){
            instance=new Reconfigure();
        }
        return instance;
    }

    private Reconfigure() {
        if(isLinux){
            appData=System.getProperty("user.home");
        }
        setTitle("Mintwire Node Configure");
        initComponents();

        passPhraseLabel.setVisible(false);
        passphrasePassword.setVisible(false);
        passphraseIcon.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        passphrasePassword = new javax.swing.JPasswordField();
        superNodeIPField = new javax.swing.JTextField();
        superNodePortField = new javax.swing.JTextField();
        passphraseIcon = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        saveLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        firstCheckbox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        superNodeIPLabel = new javax.swing.JLabel();
        superNodePortLabel = new javax.swing.JLabel();
        passPhraseLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(45, 48, 56));

        passphrasePassword.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        passphraseIcon.setBackground(new java.awt.Color(45, 48, 56));
        passphraseIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mintwire/res/pngs/passphrase.png"))); // NOI18N
        passphraseIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passphraseIconMouseClicked(evt);
            }
        });
        passphraseIcon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passphraseIconKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(passphrasePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passphraseIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(superNodePortField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superNodeIPField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(superNodeIPField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(superNodePortField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passphraseIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(passphrasePassword))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 260, 200));

        jPanel2.setBackground(new java.awt.Color(45, 48, 56));
        jPanel2.setForeground(new java.awt.Color(45, 48, 56));

        saveLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mintwire/res/pngs/updateprofile.png"))); // NOI18N
        saveLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(saveLabel)
                .addContainerGap(232, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(saveLabel)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 510, 70));

        jPanel3.setBackground(new java.awt.Color(45, 48, 56));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mintwire/res/logos/logo-smallish.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel1)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 150));

        jPanel4.setBackground(new java.awt.Color(45, 48, 56));

        firstCheckbox.setBackground(new java.awt.Color(45, 48, 56));
        firstCheckbox.setForeground(new java.awt.Color(204, 204, 204));
        firstCheckbox.setText("Start as first node");
        firstCheckbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                firstCheckboxItemStateChanged(evt);
            }
        });
        firstCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstCheckboxActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(45, 48, 56));
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mintwire/res/pngs/bootinfo.png"))); // NOI18N
        jLabel2.setText("A boot node is someone who already joined the network");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(firstCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(45, 45, 45))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(firstCheckbox)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 510, 80));

        jPanel5.setBackground(new java.awt.Color(45, 48, 56));

        superNodeIPLabel.setBackground(new java.awt.Color(45, 48, 56));
        superNodeIPLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        superNodeIPLabel.setText("Boot Node IP address:");

        superNodePortLabel.setBackground(new java.awt.Color(45, 48, 56));
        superNodePortLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        superNodePortLabel.setText("Boot Node Port:");

        passPhraseLabel.setBackground(new java.awt.Color(45, 48, 56));
        passPhraseLabel.setText("Boot passphrase:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passPhraseLabel)
                    .addComponent(superNodePortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(superNodeIPLabel))
                .addGap(27, 27, 27))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(superNodeIPLabel)
                .addGap(18, 18, 18)
                .addComponent(superNodePortLabel)
                .addGap(45, 45, 45)
                .addComponent(passPhraseLabel)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 250, 200));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passphraseIconKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passphraseIconKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_passphraseIconKeyPressed

    private void passphraseIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passphraseIconMouseClicked
        if ("peerbase".equals(new String(passphrasePassword.getPassword()))) {
            isAuthorized = true;
            passPhraseLabel.setVisible(false);
            passphrasePassword.setVisible(false);
        } else {
            label = new JLabel("<html><center>You don't have permission to do that yet");
            label.setHorizontalAlignment(SwingConstants.CENTER);
            JOptionPane.showMessageDialog(null, label, "Access denied", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_passphraseIconMouseClicked

    private void firstCheckboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_firstCheckboxItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            isTryingFirst = true;
            passPhraseLabel.setVisible(true);
            passphrasePassword.setVisible(true);
            passphraseIcon.setVisible(true);
           superNodeIPField.setVisible(false);
           superNodeIPLabel.setVisible(false);
            

        } else {
            passPhraseLabel.setVisible(false);
            passphrasePassword.setVisible(false);
            passphraseIcon.setVisible(false);
             superNodeIPField.setVisible(true);
           superNodeIPLabel.setVisible(true);
            
           
        };
    }//GEN-LAST:event_firstCheckboxItemStateChanged

    private void saveLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveLabelMouseClicked
        String fullPath = appData + "/MINTWIRE";
        File mintwireFolder = new File(fullPath);
        FileOutputStream out;
        FileWriter fw;
        BufferedWriter bw;
        String info="";

        if (!mintwireFolder.exists()) {
            if (mintwireFolder.mkdir()) {
                System.err.println("Created folder");

            } else {
                label = new JLabel("<html><center>Cannot create app folder.");
                label.setHorizontalAlignment(SwingConstants.CENTER);
                JOptionPane.showMessageDialog(null, label, "App Folder Error", JOptionPane.INFORMATION_MESSAGE);
                
            }

        }
        File initFile = new File(fullPath + "/init.txt");
        if (!initFile.exists()) {
            try {
                initFile.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(Reconfigure.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        if(isAuthorized){
            String host="";
            try {
                //bindport, boot addr, boot port,
                InetAddress ip=InetAddress.getLocalHost();
                host=ip.getHostAddress();
                
                if("127.0.1.1".equals(host)){
                label = new JLabel("<html><center>Please input the correct IP address of your system");
                label.setHorizontalAlignment(SwingConstants.CENTER);
                host=JOptionPane.showInputDialog(null, label, "Localhost returned loopback address", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (UnknownHostException ex) {
                Logger.getLogger(Reconfigure.class.getName()).log(Level.SEVERE, null, ex);
            }
        
           info=superNodePortField.getText()+","+host+","+superNodePortField.getText();
        
        }else{
            info=superNodePortField.getText()+","+superNodeIPField.getText()+","+superNodePortField.getText();
        }
       
         
        try {
            Files.write(Paths.get(fullPath+"/init.txt"), info.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(Reconfigure.class.getName()).log(Level.SEVERE, null, ex);
        }
             
        setVisible(false);
    }//GEN-LAST:event_saveLabelMouseClicked

    private void firstCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstCheckboxActionPerformed

   
    public static void main(String args[]) {
     
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reconfigure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox firstCheckbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel passPhraseLabel;
    private javax.swing.JLabel passphraseIcon;
    private javax.swing.JPasswordField passphrasePassword;
    private javax.swing.JLabel saveLabel;
    private javax.swing.JTextField superNodeIPField;
    private javax.swing.JLabel superNodeIPLabel;
    private javax.swing.JTextField superNodePortField;
    private javax.swing.JLabel superNodePortLabel;
    // End of variables declaration//GEN-END:variables
}
